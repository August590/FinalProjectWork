{"ast":null,"code":"import _objectSpread from \"D:\\\\ReactStuff\\\\finalproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\ReactStuff\\\\finalproject\\\\src\\\\Compnonents\\\\home\\\\wishlist\\\\WishlistCard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nconst appid = require(\"appid\");\n\nclass WishlistCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      games: [],\n      gameInfo: {\n        name: \"\",\n        bestPrice: \"\",\n        seller: \"\",\n        page: \"\"\n      },\n      gameComp: [],\n      steamGame: [],\n      gogGame: []\n    };\n  }\n\n  async componentWillMount() {\n    Axios.get().then(response => {\n      this.setState({\n        games: response.data\n      });\n    });\n\n    for (let i = 0; i < this.state.games.length; i++) {\n      this.state.gameInfo[\"name\"] = this.state.games[i].name;\n      let dota = await appid(`${this.state.games[i].name}`);\n      Axios.get(`https://cors-anywhere.herokuapp.com/https://store.steampowered.com/api/appdetails/?appids=${dota.appid}`).then(response => {\n        const steamGame = response.data[dota.appid].data; // steamGame.price_overview.final/100\n\n        this.setState({\n          steamGame: steamGame\n        });\n      });\n      Axios.get(`https://cors-anywhere.herokuapp.com/http://embed.gog.com/games/ajax/filtered?mediaType=game&search=${this.state.games[i].name}`).then(response => {\n        for (let j = 0; j < response.data.products.length; j++) {\n          if (response.data.products[j].title == this.state.games[i].name) {\n            const gogGame = response.data.products[j]; //.price.finalAmount\n\n            this.setState({\n              gogGame: gogGame\n            });\n          }\n        }\n      });\n      console.log(this.state.gogGame);\n      console.log(this.state.steamGame);\n\n      if (this.state.steamGame.price_overview.final / 100 >= this.state.gogP.price.finalAmount) {\n        const tempState = _objectSpread({}, this.state.gameInfo);\n\n        tempState[\"bestPrice\"] = this.state.steamGame.price_overview.final / 100;\n        tempState[\"Seller\"] = \"Steam\";\n        this.setState({\n          gameInfo: tempState\n        });\n      } else {\n        const tempState = _objectSpread({}, this.state.gameInfo);\n\n        tempState[\"bestPrice\"] = this.state.gogGame.price.finalAmount;\n        tempState[\"Seller\"] = \"Gog\";\n        this.setState({\n          gameInfo: tempState\n        });\n      }\n    }\n  }\n\n  render() {\n    return this.state.games.map((games, index) => {\n      return React.createElement(\"div\", {\n        className: \"Card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Name of Game\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Name of Company\"), \"Best Price\", React.createElement(Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Game Page\"));\n    });\n  }\n\n}\n\nexport default WishlistCard;","map":{"version":3,"sources":["D:/ReactStuff/finalproject/src/Compnonents/home/wishlist/WishlistCard.js"],"names":["React","Component","Link","Axios","appid","require","WishlistCard","state","games","gameInfo","name","bestPrice","seller","page","gameComp","steamGame","gogGame","componentWillMount","get","then","response","setState","data","i","length","dota","j","products","title","console","log","price_overview","final","gogP","price","finalAmount","tempState","render","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,IAAI,EAAE,EADA;AAENC,QAAAA,SAAS,EAAE,EAFL;AAGNC,QAAAA,MAAM,EAAE,EAHF;AAINC,QAAAA,IAAI,EAAE;AAJA,OAFN;AAQJC,MAAAA,QAAQ,EAAC,EARL;AASJC,MAAAA,SAAS,EAAE,EATP;AAUJC,MAAAA,OAAO,EAAE;AAVL,KADyB;AAAA;;AAcjC,QAAMC,kBAAN,GAA0B;AAEtBd,IAAAA,KAAK,CAACe,GAAN,GACCC,IADD,CACMC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACVb,QAAAA,KAAK,EAAEY,QAAQ,CAACE;AADN,OAAd;AAGH,KALD;;AAMA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKhB,KAAL,CAAWC,KAAX,CAAiBgB,MAApC,EAA4CD,CAAC,EAA7C,EAAgD;AAC5C,WAAKhB,KAAL,CAAWE,QAAX,CAAoB,MAApB,IAA8B,KAAKF,KAAL,CAAWC,KAAX,CAAiBe,CAAjB,EAAoBb,IAAlD;AACA,UAAIe,IAAI,GAAG,MAAMrB,KAAK,CAAE,GAAE,KAAKG,KAAL,CAAWC,KAAX,CAAiBe,CAAjB,EAAoBb,IAAK,EAA7B,CAAtB;AACAP,MAAAA,KAAK,CAACe,GAAN,CAAW,6FAA4FO,IAAI,CAACrB,KAAM,EAAlH,EACCe,IADD,CACOC,QAAQ,IAAI;AACf,cAAML,SAAS,GAAGK,QAAQ,CAACE,IAAT,CAAcG,IAAI,CAACrB,KAAnB,EAA0BkB,IAA5C,CADe,CAEf;;AACA,aAAKD,QAAL,CAAc;AACVN,UAAAA,SAAS,EAAEA;AADD,SAAd;AAGH,OAPD;AAQAZ,MAAAA,KAAK,CAACe,GAAN,CAAW,sGAAqG,KAAKX,KAAL,CAAWC,KAAX,CAAiBe,CAAjB,EAAoBb,IAAK,EAAzI,EACCS,IADD,CACMC,QAAQ,IAAG;AACb,aAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,QAAQ,CAACE,IAAT,CAAcK,QAAd,CAAuBH,MAA1C,EAAkDE,CAAC,EAAnD,EAAsD;AAClD,cAAGN,QAAQ,CAACE,IAAT,CAAcK,QAAd,CAAuBD,CAAvB,EAA0BE,KAA1B,IAAmC,KAAKrB,KAAL,CAAWC,KAAX,CAAiBe,CAAjB,EAAoBb,IAA1D,EAA+D;AAC3D,kBAAMM,OAAO,GAAGI,QAAQ,CAACE,IAAT,CAAcK,QAAd,CAAuBD,CAAvB,CAAhB,CAD2D,CAE3D;;AAEA,iBAAKL,QAAL,CAAc;AACVL,cAAAA,OAAO,EAAEA;AADC,aAAd;AAGH;AACJ;AACJ,OAZD;AAaAa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWS,OAAvB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWQ,SAAvB;;AACA,UAAG,KAAKR,KAAL,CAAWQ,SAAX,CAAqBgB,cAArB,CAAoCC,KAApC,GAA0C,GAA1C,IAAiD,KAAKzB,KAAL,CAAW0B,IAAX,CAAgBC,KAAhB,CAAsBC,WAA1E,EAAsF;AAClF,cAAMC,SAAS,qBAAO,KAAK7B,KAAL,CAAWE,QAAlB,CAAf;;AACA2B,QAAAA,SAAS,CAAC,WAAD,CAAT,GAAyB,KAAK7B,KAAL,CAAWQ,SAAX,CAAqBgB,cAArB,CAAoCC,KAApC,GAA0C,GAAnE;AACAI,QAAAA,SAAS,CAAC,QAAD,CAAT,GAAsB,OAAtB;AACA,aAAKf,QAAL,CAAc;AACVZ,UAAAA,QAAQ,EAAE2B;AADA,SAAd;AAGH,OAPD,MAQI;AACA,cAAMA,SAAS,qBAAO,KAAK7B,KAAL,CAAWE,QAAlB,CAAf;;AACA2B,QAAAA,SAAS,CAAC,WAAD,CAAT,GAAyB,KAAK7B,KAAL,CAAWS,OAAX,CAAmBkB,KAAnB,CAAyBC,WAAlD;AACAC,QAAAA,SAAS,CAAC,QAAD,CAAT,GAAsB,KAAtB;AACA,aAAKf,QAAL,CAAc;AACVZ,UAAAA,QAAQ,EAAE2B;AADA,SAAd;AAGH;AACJ;AAEJ;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI,KAAK9B,KAAL,CAAWC,KAAX,CAAiB8B,GAAjB,CAAsB,CAAC9B,KAAD,EAAQ+B,KAAR,KAAkB;AACpC,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,gBAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,CADJ;AAQH,KATD,CADJ;AAcH;;AAlFgC;;AAqFrC,eAAejC,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nconst appid = require(\"appid\");\r\nclass WishlistCard extends Component {\r\n    state = {\r\n        games: [],\r\n        gameInfo: {\r\n            name: \"\",\r\n            bestPrice: \"\",\r\n            seller: \"\",\r\n            page: \"\"\r\n        },\r\n        gameComp:[],\r\n        steamGame: [],\r\n        gogGame: []\r\n    }\r\n\r\n    async componentWillMount(){\r\n        \r\n        Axios.get()\r\n        .then(response => {\r\n            this.setState({\r\n                games: response.data\r\n            })\r\n        })\r\n        for(let i = 0; i < this.state.games.length; i++){\r\n            this.state.gameInfo[\"name\"] = this.state.games[i].name;\r\n            let dota = await appid(`${this.state.games[i].name}`);\r\n            Axios.get(`https://cors-anywhere.herokuapp.com/https://store.steampowered.com/api/appdetails/?appids=${dota.appid}`)\r\n            .then( response => {\r\n                const steamGame = response.data[dota.appid].data\r\n                // steamGame.price_overview.final/100\r\n                this.setState({\r\n                    steamGame: steamGame\r\n                })\r\n            })\r\n            Axios.get(`https://cors-anywhere.herokuapp.com/http://embed.gog.com/games/ajax/filtered?mediaType=game&search=${this.state.games[i].name}`)\r\n            .then(response =>{\r\n                for(let j = 0; j < response.data.products.length; j++){\r\n                    if(response.data.products[j].title == this.state.games[i].name){\r\n                        const gogGame = response.data.products[j]\r\n                        //.price.finalAmount\r\n                        \r\n                        this.setState({\r\n                            gogGame: gogGame\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            console.log(this.state.gogGame);\r\n            console.log(this.state.steamGame);\r\n            if(this.state.steamGame.price_overview.final/100 >= this.state.gogP.price.finalAmount){\r\n                const tempState = {...this.state.gameInfo}\r\n                tempState[\"bestPrice\"] = this.state.steamGame.price_overview.final/100;\r\n                tempState[\"Seller\"] = \"Steam\";\r\n                this.setState({\r\n                    gameInfo: tempState\r\n                })\r\n            }\r\n            else{\r\n                const tempState = {...this.state.gameInfo}\r\n                tempState[\"bestPrice\"] = this.state.gogGame.price.finalAmount;\r\n                tempState[\"Seller\"] = \"Gog\";\r\n                this.setState({\r\n                    gameInfo: tempState\r\n                })\r\n            }\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            this.state.games.map ((games, index) => {\r\n                return(\r\n                    <div className=\"Card\">\r\n                        <h3>Name of Game</h3>\r\n                        <h5>Name of Company</h5>\r\n                        Best Price\r\n                        <Link>Game Page</Link>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default WishlistCard;"]},"metadata":{},"sourceType":"module"}