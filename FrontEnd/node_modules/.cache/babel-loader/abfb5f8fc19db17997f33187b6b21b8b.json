{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactStuff\\\\finalproject\\\\src\\\\Compnonents\\\\gameinfo\\\\GameInfo.js\";\nimport React, { Component } from 'react';\nimport GameInfoBlock from './gameInfoblock/GameInfoBlock';\nimport GamePriceLinks from './gamePriceLinks/GamePriceLinks';\nimport Axios from 'axios';\n\nconst appid = require(\"appid\");\n\nclass GameInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      steamItem: [],\n      gogItem: [],\n      wishList: {\n        id: 0,\n        gameName: \"\"\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.testRun();\n    this.getGOGGame(); //this.testRun();\n  }\n\n  async testRun() {\n    console.log(`${this.props.location.state.gameName.name}`);\n    let dota = await appid(`${this.props.location.state.gameName.name}`);\n    console.log(dota);\n\n    if (dota != null) {\n      //console.log(await appid(`${this.props.location.state.gameName.name}`))\n      console.log(dota);\n      console.log(dota.appid);\n      let dotaID = dota.appid;\n      Axios.get(`https://cors-anywhere.herokuapp.com/https://store.steampowered.com/api/appdetails/?appids=${dota.appid}`).then(response => {\n        if (response.data[dotaID].data.price_overview != null) {\n          console.log(response);\n          console.log(response.data);\n          console.log(response.data[dotaID].data.price_overview.final);\n          console.log(response.data[dotaID].data.price_overview.final, response.data[dotaID].data.price_overview.initial);\n        } // return response.data[dotaID].data; \n        //gameDistributer=\"Steam\"/>\n\n\n        this.setState({\n          steamItem: response.data[dotaID].data\n        });\n        console.log(this.state.steamItem);\n      });\n    } //this.getGOGGame();\n\n  }\n\n  async getGOGGame() {\n    Axios.get(`https://cors-anywhere.herokuapp.com/http://embed.gog.com/games/ajax/filtered?mediaType=game&search=${this.props.location.state.gameName.name}`).then(response => {\n      console.log(response); // return this.props.location.state.gameName.name; \n\n      for (let i = 0; i < response.data.products.length; i++) {\n        if (response.data.products[i].title == this.props.location.state.gameName.name) {\n          this.setState({\n            gogItem: response.data.products[i]\n          });\n        }\n      } // this.setState({\n      //     gogItem: this.props.location.state.gameName.name\n      // })\n\n    });\n  }\n\n  render() {\n    console.log(this.state.steamItem);\n    console.log(this.state.gogItem);\n    let steamStuff = \"\";\n    let gogStuff = \"\";\n\n    if (this.state.steamItem.length == 0) {\n      console.log(\"I am not Going Steam\");\n    } else {\n      console.log(\"I am Going Steam\");\n\n      if (this.state.steamItem.price_overview != null) {\n        steamStuff = React.createElement(GamePriceLinks, {\n          webLink: `https://store.steampowered.com/app/${this.state.steamItem.steam_appid}`,\n          priceSymbol: \"\",\n          gameRefName: this.state.steamItem.name,\n          gamePrice: this.state.steamItem.price_overview.final_formatted,\n          gameDistributer: \"Steam\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      }\n    }\n\n    if (this.state.gogItem.length == 0) {\n      console.log(\"I am not Going Gog\");\n    } else {\n      console.log(\"I am Going Gog\");\n      gogStuff = React.createElement(GamePriceLinks, {\n        webLink: `https://www.gog.com${this.state.gogItem.url}`,\n        priceSymbol: this.state.gogItem.price.symbol,\n        gameRefName: this.state.gogItem.title,\n        gamePrice: this.state.gogItem.price.finalAmount,\n        gameDistributer: \"GOG\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    } // if(this.state.gogItem.price.finalAmount > (this.state.steamItem.price_overview.final/100)){\n    //     const tempState = {...this.state.wishList}\n    //     tempState[2] = this.state.gogItem.price.finalAmount;\n    //     this.setState({\n    //         wishList:tempState\n    //     })\n    // }\n    // else{\n    //    const  tempState = {...this.state.wishList}\n    //     tempState[2] = (this.state.steamItem.price_overview.final/100);\n    //     this.setState({\n    //         wishList:tempState\n    //     })\n    // }\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(GameInfoBlock, {\n      gameInfo: this.props.location.state.gameName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, steamStuff), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, gogStuff))));\n  }\n\n}\n\nexport default GameInfo;","map":{"version":3,"sources":["D:/ReactStuff/finalproject/src/Compnonents/gameinfo/GameInfo.js"],"names":["React","Component","GameInfoBlock","GamePriceLinks","Axios","appid","require","GameInfo","state","steamItem","gogItem","wishList","id","gameName","componentWillMount","testRun","getGOGGame","console","log","props","location","name","dota","dotaID","get","then","response","data","price_overview","final","initial","setState","i","products","length","title","render","steamStuff","gogStuff","steam_appid","final_formatted","url","price","symbol","finalAmount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport GameInfoBlock from './gameInfoblock/GameInfoBlock';\r\nimport GamePriceLinks from './gamePriceLinks/GamePriceLinks';\r\nimport Axios from 'axios';\r\n\r\nconst appid = require(\"appid\");\r\nclass GameInfo extends Component {\r\n\r\n    state = {\r\n        steamItem: [],\r\n        gogItem: [],\r\n        wishList: {\r\n            id: 0,\r\n            gameName: \"\"\r\n\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.testRun();\r\n        this.getGOGGame();\r\n        //this.testRun();\r\n    }\r\n    async testRun(){\r\n        console.log(`${this.props.location.state.gameName.name}`);\r\n        \r\n        let dota = await appid(`${this.props.location.state.gameName.name}`);\r\n        console.log(dota);\r\n        if(dota != null){\r\n        \r\n        //console.log(await appid(`${this.props.location.state.gameName.name}`))\r\n        console.log(dota);\r\n        console.log(dota.appid);\r\n            let dotaID = dota.appid;\r\n            Axios.get(`https://cors-anywhere.herokuapp.com/https://store.steampowered.com/api/appdetails/?appids=${dota.appid}`)\r\n            .then(response => {\r\n                if(response.data[dotaID].data.price_overview != null){\r\n                    console.log(response);\r\n                    console.log(response.data);\r\n                    console.log(response.data[dotaID].data.price_overview.final);\r\n                    console.log(response.data[dotaID].data.price_overview.final, response.data[dotaID].data.price_overview.initial);\r\n                }\r\n                // return response.data[dotaID].data; \r\n                    //gameDistributer=\"Steam\"/>\r\n                    this.setState({\r\n                        steamItem: response.data[dotaID].data\r\n                    })\r\n                    console.log(this.state.steamItem);\r\n            });\r\n        }\r\n        //this.getGOGGame();\r\n    }\r\n\r\n    async getGOGGame(){\r\n        Axios.get(`https://cors-anywhere.herokuapp.com/http://embed.gog.com/games/ajax/filtered?mediaType=game&search=${this.props.location.state.gameName.name}`)\r\n        .then(response => {\r\n            console.log(response);\r\n            // return this.props.location.state.gameName.name; \r\n            for(let i = 0; i < response.data.products.length; i++){\r\n                if(response.data.products[i].title == this.props.location.state.gameName.name){\r\n                    this.setState({\r\n                        gogItem: response.data.products[i]\r\n                    })\r\n                }\r\n            }\r\n            // this.setState({\r\n            //     gogItem: this.props.location.state.gameName.name\r\n            // })\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.state.steamItem);\r\n        console.log(this.state.gogItem);\r\n        let steamStuff = \"\";\r\n        let gogStuff = \"\";\r\n        if(this.state.steamItem.length == 0){\r\n            console.log(\"I am not Going Steam\");\r\n        }\r\n        else{\r\n            console.log(\"I am Going Steam\");\r\n            if(this.state.steamItem.price_overview != null){\r\n            steamStuff = <GamePriceLinks webLink ={`https://store.steampowered.com/app/${this.state.steamItem.steam_appid}`} priceSymbol=\"\" \r\n            gameRefName ={this.state.steamItem.name} gamePrice={this.state.steamItem.price_overview.final_formatted} gameDistributer=\"Steam\"/>;\r\n            }\r\n           \r\n        }\r\n        if(this.state.gogItem.length == 0){\r\n            console.log(\"I am not Going Gog\");\r\n        }\r\n        else{\r\n            console.log(\"I am Going Gog\");\r\n            gogStuff = <GamePriceLinks webLink ={`https://www.gog.com${this.state.gogItem.url}`}  \r\n            priceSymbol={this.state.gogItem.price.symbol} gameRefName ={this.state.gogItem.title} gamePrice={this.state.gogItem.price.finalAmount} gameDistributer=\"GOG\"/>;\r\n        }\r\n\r\n        // if(this.state.gogItem.price.finalAmount > (this.state.steamItem.price_overview.final/100)){\r\n        //     const tempState = {...this.state.wishList}\r\n        //     tempState[2] = this.state.gogItem.price.finalAmount;\r\n        //     this.setState({\r\n        //         wishList:tempState\r\n        //     })\r\n        // }\r\n        // else{\r\n        //    const  tempState = {...this.state.wishList}\r\n        //     tempState[2] = (this.state.steamItem.price_overview.final/100);\r\n        //     this.setState({\r\n        //         wishList:tempState\r\n        //     })\r\n        // }\r\n        return (\r\n            <div >\r\n                       {/* <div className=\"leftImage\">\r\n                        {leftImage}\r\n                    </div>\r\n                    <div className=\"rightImage\">\r\n                        {rightImage}\r\n                    </div> */}\r\n                <div >\r\n                    <GameInfoBlock gameInfo={this.props.location.state.gameName}/>\r\n                {/* <GamePriceLinks gameRefName={this.props.location.state.gameName.name}/> */}\r\n                    \r\n                    {/* <table className=\"tableOfSellers\">\r\n                        <tr>\r\n                            <th>Seller</th>\r\n                            <th>Price</th>\r\n                            <th>Link</th>\r\n                        </tr>\r\n                            {steamStuff}\r\n                            {gogStuff}\r\n                    </table> */}\r\n                    <div className=\"flex-container\">\r\n                        <div>{steamStuff}</div>\r\n                        <div>{gogStuff}</div>\r\n\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameInfo;"]},"metadata":{},"sourceType":"module"}