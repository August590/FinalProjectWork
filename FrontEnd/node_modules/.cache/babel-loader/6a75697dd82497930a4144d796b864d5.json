{"ast":null,"code":"import _objectSpread from \"D:\\\\ReactStuff\\\\finalproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\ReactStuff\\\\finalproject\\\\src\\\\Compnonents\\\\home\\\\wishlist\\\\WishlistCard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nconst appid = require(\"appid\");\n\nclass WishlistCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      games: [],\n      gameInfo: {\n        name: \"\",\n        bestPrice: \"\",\n        seller: \"\",\n        page: \"\"\n      },\n      gameComp: [],\n      steamP: 0.00,\n      gogP: 0.00\n    };\n  }\n\n  async componentWillMount() {\n    Axios.get().then(response => {\n      this.setState({\n        games: response.data\n      });\n    });\n\n    for (let i = 0; i < this.state.games.length; i++) {\n      this.state.gameInfo[\"name\"] = games[i].name;\n      let dota = await appid(`${this.state.games[i].name}`);\n      Axios.get(`https://cors-anywhere.herokuapp.com/https://store.steampowered.com/api/appdetails/?appids=${dota.appid}`).then(response => {\n        const steamGame = response.data[dota.appid].data;\n        this.setState({\n          steamP: steamGame.price_overview.final / 100\n        });\n      });\n      Axios.get(`https://cors-anywhere.herokuapp.com/http://embed.gog.com/games/ajax/filtered?mediaType=game&search=${this.state.games[i].name}`).then(response => {\n        for (let j = 0; j < response.data.products.length; j++) {\n          if (response.data.products[j].title == this.state.games[i].name) {\n            const gogGame = response.data.products[j];\n            this.setState({\n              gogP: gogGame.price.finalAmount\n            });\n          }\n        }\n      });\n\n      if (this.state.steamP >= this.state.gogP) {\n        const tempState = _objectSpread({}, this.state.gameInfo);\n\n        tempState[\"bestPrice\"] = this.state.steamP;\n        tempState[\"Seller\"] = \"Steam\";\n        this.setState({});\n      }\n    }\n  }\n\n  render() {\n    return this.state.games.map((games, index) => {\n      return React.createElement(\"div\", {\n        className: \"Card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Name of Game\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Name of Company\"), \"Best Price\", React.createElement(Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Game Page\"));\n    });\n  }\n\n}\n\nexport default WishlistCard;","map":{"version":3,"sources":["D:/ReactStuff/finalproject/src/Compnonents/home/wishlist/WishlistCard.js"],"names":["React","Component","Link","Axios","appid","require","WishlistCard","state","games","gameInfo","name","bestPrice","seller","page","gameComp","steamP","gogP","componentWillMount","get","then","response","setState","data","i","length","dota","steamGame","price_overview","final","j","products","title","gogGame","price","finalAmount","tempState","render","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nconst appid = require(\"appid\");\r\nclass WishlistCard extends Component {\r\n    state = {\r\n        games: [],\r\n        gameInfo: {\r\n            name: \"\",\r\n            bestPrice: \"\",\r\n            seller: \"\",\r\n            page: \"\"\r\n        },\r\n        gameComp:[],\r\n        steamP: 0.00,\r\n        gogP: 0.00\r\n    }\r\n\r\n    async componentWillMount(){\r\n        \r\n        Axios.get()\r\n        .then(response => {\r\n            this.setState({\r\n                games: response.data\r\n            })\r\n        })\r\n        for(let i = 0; i < this.state.games.length; i++){\r\n            this.state.gameInfo[\"name\"] = games[i].name;\r\n            let dota = await appid(`${this.state.games[i].name}`);\r\n            Axios.get(`https://cors-anywhere.herokuapp.com/https://store.steampowered.com/api/appdetails/?appids=${dota.appid}`)\r\n            .then( response => {\r\n                const steamGame = response.data[dota.appid].data\r\n                this.setState({\r\n                    steamP: steamGame.price_overview.final/100\r\n                })\r\n            })\r\n            Axios.get(`https://cors-anywhere.herokuapp.com/http://embed.gog.com/games/ajax/filtered?mediaType=game&search=${this.state.games[i].name}`)\r\n            .then(response =>{\r\n                for(let j = 0; j < response.data.products.length; j++){\r\n                    if(response.data.products[j].title == this.state.games[i].name){\r\n                        const gogGame = response.data.products[j]\r\n                        this.setState({\r\n                            gogP: gogGame.price.finalAmount\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            if(this.state.steamP >= this.state.gogP){\r\n                const tempState = {...this.state.gameInfo}\r\n                tempState[\"bestPrice\"] = this.state.steamP;\r\n                tempState[\"Seller\"] = \"Steam\";\r\n                this.setState({\r\n                    \r\n                })\r\n            }\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            this.state.games.map ((games, index) => {\r\n                return(\r\n                    <div className=\"Card\">\r\n                        <h3>Name of Game</h3>\r\n                        <h5>Name of Company</h5>\r\n                        Best Price\r\n                        <Link>Game Page</Link>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default WishlistCard;"]},"metadata":{},"sourceType":"module"}