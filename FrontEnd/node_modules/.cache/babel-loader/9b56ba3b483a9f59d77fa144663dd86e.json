{"ast":null,"code":"/*!\n * nano-cache\n * Copyright (c) 2017 Cxense Inc\n * Authors:  aziz.khoury@cxense.com, greg.kindel@cxense.com\n * MIT license https://opensource.org/licenses/MIT\n */\nvar extend = require(\"extend\");\n\nvar zlib = require('zlib');\n\nvar os = require('os');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar NanoCache = function (options) {\n  this.init(options);\n};\n\nNanoCache.SIZE = {\n  GB: Math.pow(2, 30),\n  MB: Math.pow(2, 20),\n  KB: Math.pow(2, 10)\n};\nNanoCache.DEFAULTS = {\n  ttl: null,\n  // msec\n  limit: null,\n  // hits\n  bytes: Infinity,\n  compress: true,\n  minFreeMem: 0,\n  maxEvictBytes: os.totalmem() * .05\n};\nNanoCache.prototype = extend(true, {}, Object.create(EventEmitter.prototype), {\n  init: function (opt) {\n    this.options = extend({}, NanoCache.DEFAULTS, opt);\n    this.hits = 0;\n    this.evictions = 0;\n    this.misses = 0;\n    this._lastAccess = [];\n    this.clear();\n  },\n  get: function (key) {\n    this._checkExpired(key);\n\n    var datum = this._data[key];\n\n    if (!datum) {\n      this.misses++;\n      return null;\n    }\n\n    var value = this._value(key);\n\n    this.hits++;\n    datum.hits++;\n    datum.accessed = this.now();\n\n    this._updateActiveIndex(datum.key);\n\n    this.asyncExpireCheck();\n    this.emit('get', key);\n    return value;\n  },\n  _updateActiveIndex: function (key) {\n    this._removeFromActive(key);\n\n    this._lastAccess.push(key);\n  },\n  _removeFromActive: function (key) {\n    var la = this._lastAccess;\n\n    for (var i = la.length - 1; i >= 0; i--) {\n      if (la[i] === key) {\n        la.splice(i, 1);\n        break;\n      }\n    }\n  },\n  asyncExpireCheck: function () {\n    var self = this;\n    clearTimeout(this._asyncCheck);\n    this._asyncCheck = setTimeout(function () {\n      self._asyncCheck = null;\n      self.clearExpired();\n    }, 0);\n  },\n  set: function (key, value, options) {\n    var opt = extend({}, this.options, options);\n    this.del(key);\n    var epoch = this.now();\n    var json = JSON.stringify(value);\n    var store_value = opt.compress ? zlib.deflateRawSync(json) : json;\n    var store_buffer = Buffer.from(store_value);\n    var bytes = Buffer.byteLength(store_buffer, 'utf8');\n    var datum = {\n      key: key,\n      hits: 0,\n      accessed: epoch,\n      updated: epoch,\n      expires: null,\n      value: store_buffer,\n      bytes: bytes,\n      ttl: opt.ttl,\n      compressed: opt.compress,\n      cost: opt.cost || 1,\n      limit: opt.limit\n    };\n    this._data[key] = datum;\n    this.bytes += datum.bytes;\n    var ttl = parseInt(datum.ttl, 10);\n\n    if (!isNaN(ttl)) {\n      datum.expires = epoch + ttl;\n    }\n\n    if (opt.expires instanceof Date) {\n      opt.expires = opt.expires.getTime();\n    }\n\n    if (opt.expires > 0) {\n      datum.expires = opt.expires;\n    }\n\n    this._updateActiveIndex(datum.key);\n\n    this._checkLimits();\n\n    this.emit('set', key);\n    return value;\n  },\n  info: function (key) {\n    var datum = this._data[key];\n\n    if (!datum) {\n      return null;\n    }\n\n    return extend({}, datum, {\n      value: this._value(key)\n    });\n  },\n  _value: function (key) {\n    var datum = this._data[key];\n\n    if (!datum.value) {\n      return null;\n    }\n\n    var value = datum.compressed ? zlib.inflateRawSync(datum.value) : datum.value;\n    return datum && JSON.parse(value);\n  },\n  del: function (key) {\n    var info = this.info(key);\n\n    if (!info) {\n      return null;\n    }\n\n    this.bytes -= info.bytes;\n    delete this._data[key];\n\n    this._removeFromActive(key);\n\n    this.emit('del', key);\n    return info.value;\n  },\n  clear: function () {\n    this._data = {};\n    this.bytes = 0;\n    this.emit('clear');\n  },\n  clearExpired: function () {\n    Object.keys(this._data).forEach(this._checkExpired.bind(this));\n  },\n  _checkExpired: function (key) {\n    if (this.isExpired(key)) {\n      this.del(key);\n    }\n  },\n  _checkLimits: function () {\n    this.clearExpired();\n\n    if (this.options.maxBytes) {\n      this._doEviction(function () {\n        var stats = this.stats();\n        return stats.bytes > this.options.maxBytes;\n      }.bind(this));\n    } // check hard memory constraints\n\n\n    this._doEviction(function () {\n      return os.freemem() < this.options.minFreeMem;\n    }.bind(this)); // manual garbage collection can be enabled with `node --expose-gc`\n\n\n    if (global.gc) {\n      global.gc();\n    }\n  },\n  isExpired: function (key) {\n    return this.isTTLExpired(key) || this.isLimitReached(key);\n  },\n  isTTLExpired: function (key) {\n    var datum = this._data[key];\n    return datum && datum.expires > 0 && datum.expires <= this.now();\n  },\n  isLimitReached: function (key) {\n    var datum = this._data[key];\n    return datum && datum.limit > 0 && datum.limit <= datum.hits;\n  },\n  now: function () {\n    return new Date().getTime();\n  },\n  stats: function () {\n    var oldest = this._data[this._lastAccess[0]];\n    return {\n      count: this._lastAccess.length,\n      age: oldest && this.now() - oldest.accessed,\n      hits: this.hits,\n      evictions: this.evictions,\n      misses: this.misses,\n      bytes: this.bytes\n    };\n  },\n  _doEviction: function (callback) {\n    var keepGoing = callback();\n\n    if (!keepGoing) {\n      return;\n    }\n\n    var sorted = this._lastAccess;\n    var maxEvictBytes = this.options.maxEvictBytes;\n    var bytes;\n\n    while (keepGoing && sorted.length && maxEvictBytes > 0) {\n      var key = sorted.shift();\n      bytes = this._data[key].bytes;\n      maxEvictBytes -= bytes;\n      this.evictions++;\n      this.del(key);\n      keepGoing = callback();\n    }\n  }\n}); // make it usable even without creating an instance of it.\n// basically creating an instance, then copying all non-underscore-starting-functions to the factory\n\nNanoCache.singleton = new NanoCache();\nObject.keys(NanoCache.prototype).forEach(function (key) {\n  if (typeof NanoCache.singleton[key] === 'function' && key.indexOf('_') !== 0) {\n    NanoCache[key] = NanoCache.prototype[key].bind(NanoCache.singleton);\n  }\n});\nmodule.exports = NanoCache;","map":{"version":3,"sources":["D:/JavaTraining/FinalProjectWork/FrontEnd/node_modules/nano-cache/index.js"],"names":["extend","require","zlib","os","EventEmitter","NanoCache","options","init","SIZE","GB","Math","pow","MB","KB","DEFAULTS","ttl","limit","bytes","Infinity","compress","minFreeMem","maxEvictBytes","totalmem","prototype","Object","create","opt","hits","evictions","misses","_lastAccess","clear","get","key","_checkExpired","datum","_data","value","_value","accessed","now","_updateActiveIndex","asyncExpireCheck","emit","_removeFromActive","push","la","i","length","splice","self","clearTimeout","_asyncCheck","setTimeout","clearExpired","set","del","epoch","json","JSON","stringify","store_value","deflateRawSync","store_buffer","Buffer","from","byteLength","updated","expires","compressed","cost","parseInt","isNaN","Date","getTime","_checkLimits","info","inflateRawSync","parse","keys","forEach","bind","isExpired","maxBytes","_doEviction","stats","freemem","global","gc","isTTLExpired","isLimitReached","oldest","count","age","callback","keepGoing","sorted","shift","singleton","indexOf","module","exports"],"mappings":"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","sourcesContent":["/*!\n * nano-cache\n * Copyright (c) 2017 Cxense Inc\n * Authors:  aziz.khoury@cxense.com, greg.kindel@cxense.com\n * MIT license https://opensource.org/licenses/MIT\n */\n\nvar extend = require(\"extend\");\nvar zlib = require('zlib');\nvar os = require('os');\nvar EventEmitter = require('events').EventEmitter;\n\nvar NanoCache = function (options) {\n    this.init(options);\n};\n\nNanoCache.SIZE = {\n    GB :  Math.pow(2, 30),\n    MB :  Math.pow(2, 20),\n    KB :  Math.pow(2, 10)\n};\n\nNanoCache.DEFAULTS = {\n    ttl: null,   // msec\n    limit: null, // hits\n    bytes: Infinity,\n    compress: true,\n    minFreeMem : 0,\n    maxEvictBytes : os.totalmem() * .05\n};\n\nNanoCache.prototype = extend(true, {}, Object.create(EventEmitter.prototype), {\n    init : function (opt) {\n        this.options = extend({}, NanoCache.DEFAULTS, opt);\n        this.hits = 0;\n        this.evictions = 0;\n        this.misses = 0;\n        this._lastAccess = [];\n        this.clear();\n    },\n\n    get: function (key) {\n        this._checkExpired(key);\n\n        var datum = this._data[key];\n        if (!datum) {\n            this.misses++;\n            return null;\n        }\n\n        var value = this._value(key);\n\n        this.hits++;\n        datum.hits++;\n        datum.accessed = this.now();\n        this._updateActiveIndex(datum.key);\n\n        this.asyncExpireCheck();\n\n        this.emit('get', key);\n        return value;\n    },\n\n    _updateActiveIndex : function (key) {\n        this._removeFromActive(key);\n        this._lastAccess.push(key);\n    },\n\n    _removeFromActive : function (key){\n        var la = this._lastAccess;\n        for(var i = la.length - 1; i >= 0; i--){\n            if(la[i] === key){\n                la.splice(i, 1);\n                break;\n            }\n        }\n    },\n\n    asyncExpireCheck : function () {\n        var self = this;\n        clearTimeout(this._asyncCheck);\n        this._asyncCheck = setTimeout(function () {\n            self._asyncCheck = null;\n            self.clearExpired();\n        }, 0);\n    },\n\n    set: function (key, value, options) {\n        var opt = extend({}, this.options, options);\n\n        this.del(key);\n\n        var epoch = this.now();\n        var json = JSON.stringify(value);\n\n        var store_value = opt.compress\n            ? zlib.deflateRawSync(json)\n            : json;\n\n        var store_buffer = Buffer.from(store_value);\n        var bytes = Buffer.byteLength(store_buffer, 'utf8');\n\n        var datum = {\n            key: key,\n            hits : 0,\n            accessed : epoch,\n            updated : epoch,\n            expires :  null,\n            value : store_buffer,\n            bytes : bytes,\n            ttl: opt.ttl,\n            compressed: opt.compress,\n            cost: opt.cost || 1,\n            limit: opt.limit\n        };\n\n        this._data[key] = datum;\n\n        this.bytes += datum.bytes;\n\n        var ttl = parseInt(datum.ttl, 10);\n        if (!isNaN(ttl)) {\n            datum.expires = epoch + ttl;\n        }\n\n        if (opt.expires instanceof Date) {\n            opt.expires = opt.expires.getTime();\n        }\n\n        if (opt.expires > 0) {\n            datum.expires = opt.expires;\n        }\n\n        this._updateActiveIndex(datum.key);\n        this._checkLimits();\n\n        this.emit('set', key);\n        return value;\n    },\n\n    info : function (key) {\n        var datum = this._data[key];\n        if (!datum) {\n            return null;\n        }\n        return extend({}, datum, {\n            value: this._value(key)\n        });\n    },\n\n    _value : function (key) {\n        var datum =  this._data[key];\n        if (!datum.value) {\n            return null;\n        }\n        var value = (datum.compressed)\n            ? zlib.inflateRawSync(datum.value)\n            : datum.value;\n\n        return datum && JSON.parse(value);\n    },\n\n    del: function (key) {\n        var info  = this.info(key);\n        if (!info) {\n            return null;\n        }\n        this.bytes -= info.bytes;\n        delete this._data[key];\n        this._removeFromActive(key);\n        this.emit('del', key);\n        return info.value;\n    },\n\n    clear: function () {\n        this._data = {};\n        this.bytes = 0;\n        this.emit('clear');\n    },\n\n    clearExpired: function () {\n        Object.keys(this._data).forEach(this._checkExpired.bind(this));\n    },\n\n    _checkExpired : function (key) {\n        if (this.isExpired(key)) {\n            this.del(key);\n        }\n    },\n\n    _checkLimits : function () {\n        this.clearExpired();\n\n        if (this.options.maxBytes) {\n            this._doEviction(function () {\n                var stats = this.stats();\n                return stats.bytes > this.options.maxBytes;\n            }.bind(this));\n        }\n\n        // check hard memory constraints\n        this._doEviction(function () {\n            return os.freemem() < this.options.minFreeMem;\n        }.bind(this));\n\n        // manual garbage collection can be enabled with `node --expose-gc`\n        if( global.gc ){\n            global.gc();\n        }\n    },\n\n    isExpired : function (key) {\n        return this.isTTLExpired(key) || this.isLimitReached(key);\n    },\n\n    isTTLExpired: function (key) {\n        var datum = this._data[key];\n        return datum && datum.expires > 0 && datum.expires <= this.now();\n    },\n\n    isLimitReached: function (key) {\n        var datum = this._data[key];\n        return datum && datum.limit > 0 && datum.limit <= datum.hits;\n    },\n\n    now : function () {\n        return (new Date()).getTime();\n    },\n\n    stats : function () {\n        var oldest = this._data[this._lastAccess[0]];\n        return {\n            count: this._lastAccess.length,\n            age : oldest && this.now() - oldest.accessed,\n            hits : this.hits,\n            evictions: this.evictions,\n            misses : this.misses,\n            bytes: this.bytes\n        };\n    },\n\n    _doEviction : function (callback) {\n        var keepGoing = callback();\n        if (!keepGoing) {\n            return;\n        }\n\n        var sorted  = this._lastAccess;\n        var maxEvictBytes = this.options.maxEvictBytes;\n        var bytes;\n        while (keepGoing && sorted.length && maxEvictBytes > 0 ) {\n            var key = sorted.shift();\n            bytes = this._data[key].bytes;\n            maxEvictBytes -= bytes;\n            this.evictions++;\n            this.del( key );\n            keepGoing = callback();\n        }\n    }\n});\n\n// make it usable even without creating an instance of it.\n// basically creating an instance, then copying all non-underscore-starting-functions to the factory\nNanoCache.singleton = new NanoCache();\nObject.keys(NanoCache.prototype).forEach(function (key) {\n    if (typeof NanoCache.singleton[key] === 'function' && key.indexOf('_') !== 0) {\n        NanoCache[key] = NanoCache.prototype[key].bind(NanoCache.singleton);\n    }\n});\n\nmodule.exports = NanoCache;\n"]},"metadata":{},"sourceType":"script"}