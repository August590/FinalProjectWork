{"ast":null,"code":"const request = require(\"request-promise-cache\");\n\nconst api = \"https://cors-anywhere.herokuapp.com/https://api.steampowered.com/ISteamApps/GetAppList/v0002/?key=29E2F9718C66A7C0545E3C6882ABE0EA\";\nlet options = {\n  url: api,\n  cacheKey: api,\n  cacheTLL: 1000 * 60 * 60\n};\n\nmodule.exports = test => {\n  let type = test.constructor.name;\n\n  switch (type) {\n    case \"String\":\n      return name_exact(test);\n      break;\n\n    case \"Number\":\n      return byId(test);\n      break;\n\n    case \"RegExp\":\n      return name_regex(test);\n      break;\n\n    default:\n      throw new Error(\"Please supply either a String, a Number, or a Regular Expression, \" + type + \" is not supported\");\n  }\n};\n\nfunction byId(id) {\n  return new Promise((resolve, reject) => {\n    request(options).then(data => {\n      data = JSON.parse(data);\n      resolve(data.applist.apps.filter(a => a.appid === id)[0]);\n    }).catch(e => reject(e));\n  });\n}\n\n;\n\nfunction name_exact(name) {\n  return new Promise((resolve, reject) => {\n    request(options).then(data => {\n      data = JSON.parse(data);\n      resolve(data.applist.apps.filter(a => a.name === name)[0]);\n    }).catch(e => reject(e));\n  });\n}\n\nfunction name_regex(re) {\n  return new Promise((resolve, reject) => {\n    request(options).then(data => {\n      data = JSON.parse(data);\n      resolve(data.applist.apps.filter(a => a.name.match(re)));\n    }).catch(e => reject(e));\n  });\n}","map":{"version":3,"sources":["D:/ReactStuff/finalproject/node_modules/appid/app.js"],"names":["request","require","api","options","url","cacheKey","cacheTLL","module","exports","test","type","constructor","name","name_exact","byId","name_regex","Error","id","Promise","resolve","reject","then","data","JSON","parse","applist","apps","filter","a","appid","catch","e","re","match"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,uBAAD,CAAvB;;AAEA,MAAMC,GAAG,GAAG,oIAAZ;AACA,IAAIC,OAAO,GAAG;AACVC,EAAAA,GAAG,EAAEF,GADK;AAEVG,EAAAA,QAAQ,EAAEH,GAFA;AAGVI,EAAAA,QAAQ,EAAE,OAAK,EAAL,GAAQ;AAHR,CAAd;;AAOAC,MAAM,CAACC,OAAP,GAAiBC,IAAI,IAAI;AACvB,MAAIC,IAAI,GAAGD,IAAI,CAACE,WAAL,CAAiBC,IAA5B;;AACA,UAAOF,IAAP;AACE,SAAK,QAAL;AACE,aAAOG,UAAU,CAACJ,IAAD,CAAjB;AACA;;AACF,SAAK,QAAL;AACE,aAAOK,IAAI,CAACL,IAAD,CAAX;AACA;;AACF,SAAK,QAAL;AACE,aAAOM,UAAU,CAACN,IAAD,CAAjB;AACA;;AACF;AACE,YAAM,IAAIO,KAAJ,CAAU,uEAAuEN,IAAvE,GAA8E,mBAAxF,CAAN;AAXJ;AAaD,CAfD;;AAiBA,SAASI,IAAT,CAAcG,EAAd,EAAkB;AAChB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCpB,IAAAA,OAAO,CAACG,OAAD,CAAP,CAAiBkB,IAAjB,CAAsBC,IAAI,IAAI;AAC5BA,MAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACAH,MAAAA,OAAO,CAACG,IAAI,CAACG,OAAL,CAAaC,IAAb,CAAkBC,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYZ,EAA1C,EAA8C,CAA9C,CAAD,CAAP;AACD,KAHD,EAGGa,KAHH,CAGSC,CAAC,IAAIX,MAAM,CAACW,CAAD,CAHpB;AAID,GALM,CAAP;AAMD;;AAAA;;AAED,SAASlB,UAAT,CAAoBD,IAApB,EAA0B;AACxB,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCpB,IAAAA,OAAO,CAACG,OAAD,CAAP,CAAiBkB,IAAjB,CAAsBC,IAAI,IAAI;AAC5BA,MAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACAH,MAAAA,OAAO,CAACG,IAAI,CAACG,OAAL,CAAaC,IAAb,CAAkBC,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,CAAChB,IAAF,KAAWA,IAAzC,EAA+C,CAA/C,CAAD,CAAP;AACD,KAHD,EAGGkB,KAHH,CAGSC,CAAC,IAAIX,MAAM,CAACW,CAAD,CAHpB;AAID,GALM,CAAP;AAMD;;AAED,SAAShB,UAAT,CAAoBiB,EAApB,EAAwB;AACtB,SAAO,IAAId,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCpB,IAAAA,OAAO,CAACG,OAAD,CAAP,CAAiBkB,IAAjB,CAAsBC,IAAI,IAAI;AAC5BA,MAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACAH,MAAAA,OAAO,CAACG,IAAI,CAACG,OAAL,CAAaC,IAAb,CAAkBC,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,CAAChB,IAAF,CAAOqB,KAAP,CAAaD,EAAb,CAA9B,CAAD,CAAP;AACD,KAHD,EAGGF,KAHH,CAGSC,CAAC,IAAIX,MAAM,CAACW,CAAD,CAHpB;AAID,GALM,CAAP;AAMD","sourcesContent":["const request = require(\"request-promise-cache\");\n\nconst api = \"https://cors-anywhere.herokuapp.com/https://api.steampowered.com/ISteamApps/GetAppList/v0002/?key=29E2F9718C66A7C0545E3C6882ABE0EA\";\nlet options = {\n    url: api,\n    cacheKey: api,\n    cacheTLL: 1000*60*60\n};\n\n\nmodule.exports = test => {\n  let type = test.constructor.name;\n  switch(type) {\n    case \"String\":\n      return name_exact(test);\n      break;\n    case \"Number\":\n      return byId(test);\n      break;\n    case \"RegExp\":\n      return name_regex(test);\n      break;\n    default:\n      throw new Error(\"Please supply either a String, a Number, or a Regular Expression, \" + type + \" is not supported\");\n  }\n}\n\nfunction byId(id) {\n  return new Promise((resolve, reject) => {\n    request(options).then(data => {\n      data = JSON.parse(data);\n      resolve(data.applist.apps.filter(a => a.appid === id)[0]);\n    }).catch(e => reject(e));\n  })\n};\n\nfunction name_exact(name) {\n  return new Promise((resolve, reject) => {\n    request(options).then(data => {\n      data = JSON.parse(data);\n      resolve(data.applist.apps.filter(a => a.name === name)[0]);\n    }).catch(e => reject(e));\n  })\n}\n\nfunction name_regex(re) {\n  return new Promise((resolve, reject) => {\n    request(options).then(data => {\n      data = JSON.parse(data);\n      resolve(data.applist.apps.filter(a => a.name.match(re)));\n    }).catch(e => reject(e));\n  })\n}\n"]},"metadata":{},"sourceType":"script"}