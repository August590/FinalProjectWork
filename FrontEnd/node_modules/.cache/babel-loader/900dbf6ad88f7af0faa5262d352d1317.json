{"ast":null,"code":"import _objectSpread from \"D:\\\\ReactStuff\\\\finalproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\ReactStuff\\\\finalproject\\\\src\\\\Compnonents\\\\home\\\\wishlist\\\\WishlistCard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nconst appid = require(\"appid\");\n\nclass WishlistCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      games: [],\n      gameInfo: {\n        name: \"\",\n        bestPrice: \"\",\n        seller: \"\",\n        page: \"\"\n      },\n      gameComp: [],\n      steamGame: [],\n      gogGame: [],\n      user: []\n    };\n  }\n\n  async componentWillMount() {\n    const email = localStorage.getItem(\"loggedInUser\");\n    const params = {\n      email: email\n    };\n    console.log(email);\n    console.log({\n      params\n    });\n    Axios.get(\"http://localhost:8080/getID\", {\n      params\n    }).then(response => {\n      this.setState({\n        user: response.data\n      });\n      console.log(this.state.user);\n      console.log(this.state.user.id);\n      const userID = this.state.user.id;\n      console.log(userID);\n      const userIDObj = {\n        userID: userID\n      };\n      console.log({\n        userIDObj\n      });\n      Axios.get(`http://localhost:8080/userGames?userID=${userID}`).then(response => {\n        this.setState({\n          games: response.data\n        });\n        this.getApiID(); // for(let i = 0; i < this.state.games.length; i++){\n        //     this.state.gameInfo[\"name\"] = this.state.games[i].name;\n        //     console.log(this.state.gameInfo);\n        //     // let dota = await appid(`${this.state.games[i].name}`);\n        //     console.log(dota);\n        //     //\n        //     Axios.get(`https://cors-anywhere.herokuapp.com/https://store.steampowered.com/api/appdetails/?appids=${dota.appid}`)\n        //     .then( response => {\n        //         const steamGame = response.data[dota.appid].data\n        //         // steamGame.price_overview.final/100\n        //         this.setState({\n        //             steamGame: steamGame\n        //         })\n        //         Axios.get(`https://cors-anywhere.herokuapp.com/http://embed.gog.com/games/ajax/filtered?mediaType=game&search=${this.state.games[i].name}`)\n        //         .then(response =>{\n        //             for(let j = 0; j < response.data.products.length; j++){\n        //                 if(response.data.products[j].title == this.state.games[i].name){\n        //                     const gogGame = response.data.products[j]\n        //                     //.price.finalAmount\n        //                     this.setState({\n        //                         gogGame: gogGame\n        //                     })\n        //                 }\n        //             }\n        //             console.log(this.state.gogGame);\n        //             console.log(this.state.steamGame);\n        //             if(this.state.steamGame.price_overview.final/100 >= this.state.gogP.price.finalAmount){\n        //                 const tempState = {...this.state.gameInfo}\n        //                 tempState[\"bestPrice\"] = this.state.steamGame.price_overview.final/100;\n        //                 tempState[\"Seller\"] = \"Steam\";\n        //                 tempState[\"page\"] = `https://store.steampowered.com/app/${this.state.steamGame.steam_appid}`\n        //                 this.setState({\n        //                     gameInfo: tempState\n        //                 })\n        //                 console.log(this.state.gameInfo, \"End of if price check statement\");\n        //             }\n        //             else{\n        //                 const tempState = {...this.state.gameInfo}\n        //                 tempState[\"bestPrice\"] = this.state.gogGame.price.finalAmount;\n        //                 tempState[\"Seller\"] = \"Gog\";\n        //                 tempState[\"page\"] = `https://www.gog.com${this.state.gogGame.url}`\n        //                 this.setState({\n        //                     gameInfo: tempState\n        //                 })\n        //                 console.log(this.state.gameInfo, \"End of else price check statement\");\n        //             }\n        //             this.state.gameComp.push(this.state.gameInfo);\n        //             console.log(this.state.gameComp);\n        //         })\n        //     })\n        // }\n        //console.log(this.state.gameComp);\n      });\n    });\n  }\n\n  async getApiID() {\n    for (let i = 0; i < this.state.games.length; i++) {\n      this.state.gameInfo[\"name\"] = this.state.games[i].name;\n      console.log(this.state.gameInfo);\n      let dota = await appid(`${this.state.games[i].name}`);\n      console.log(dota); //\n\n      Axios.get(`https://cors-anywhere.herokuapp.com/https://store.steampowered.com/api/appdetails/?appids=${dota.appid}`).then(response => {\n        const steamGame = response.data[dota.appid].data; // steamGame.price_overview.final/100\n\n        this.setState({\n          steamGame: steamGame\n        });\n        Axios.get(`https://cors-anywhere.herokuapp.com/http://embed.gog.com/games/ajax/filtered?mediaType=game&search=${this.state.games[i].name}`).then(response => {\n          for (let j = 0; j < response.data.products.length; j++) {\n            if (response.data.products[j].title == this.state.games[i].name) {\n              const gogGame = response.data.products[j]; //.price.finalAmount\n\n              this.setState({\n                gogGame: gogGame\n              });\n            }\n          }\n\n          console.log(this.state.gogGame);\n          console.log(this.state.steamGame);\n\n          if (this.state.steamGame.price_overview.final / 100 >= this.state.gogGame.price.finalAmount) {\n            const tempState = _objectSpread({}, this.state.gameInfo);\n\n            tempState[\"bestPrice\"] = this.state.steamGame.price_overview.final / 100;\n            tempState[\"seller\"] = \"Steam\";\n            tempState[\"page\"] = `https://store.steampowered.com/app/${this.state.steamGame.steam_appid}`;\n            this.setState({\n              gameInfo: tempState\n            });\n            console.log(this.state.gameInfo, \"End of if price check statement\");\n          } else {\n            const tempState = _objectSpread({}, this.state.gameInfo);\n\n            tempState[\"bestPrice\"] = this.state.gogGame.price.finalAmount;\n            tempState[\"seller\"] = \"Gog\";\n            tempState[\"page\"] = `https://www.gog.com${this.state.gogGame.url}`;\n            this.setState({\n              gameInfo: tempState\n            });\n            console.log(this.state.gameInfo, \"End of else price check statement\");\n          }\n\n          this.state.gameComp.push(this.state.gameInfo);\n          console.log(this.state.gameComp[0].name);\n        });\n      });\n    }\n  }\n\n  render() {\n    console.log(gameComp);\n    return this.state.gameComp.map((gameComp, index) => {\n      console.log(gameComp[index].name);\n      return React.createElement(\"div\", {\n        className: \"Card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, gameComp[index].name), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, gameComp[index].seller), gameComp[index].bestPrice, React.createElement(\"a\", {\n        href: gameComp[index].page,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, gameComp.gameInfo.name));\n    });\n  }\n\n}\n\nexport default WishlistCard;","map":{"version":3,"sources":["D:/ReactStuff/finalproject/src/Compnonents/home/wishlist/WishlistCard.js"],"names":["React","Component","Link","Axios","appid","require","WishlistCard","state","games","gameInfo","name","bestPrice","seller","page","gameComp","steamGame","gogGame","user","componentWillMount","email","localStorage","getItem","params","console","log","get","then","response","setState","data","id","userID","userIDObj","getApiID","i","length","dota","j","products","title","price_overview","final","price","finalAmount","tempState","steam_appid","url","push","render","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,IAAI,EAAE,EADA;AAENC,QAAAA,SAAS,EAAE,EAFL;AAGNC,QAAAA,MAAM,EAAE,EAHF;AAINC,QAAAA,IAAI,EAAE;AAJA,OAFN;AAQJC,MAAAA,QAAQ,EAAC,EARL;AASJC,MAAAA,SAAS,EAAE,EATP;AAUJC,MAAAA,OAAO,EAAE,EAVL;AAWJC,MAAAA,IAAI,EAAE;AAXF,KADyB;AAAA;;AAgBjC,QAAMC,kBAAN,GAA0B;AACtB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACA,UAAMC,MAAM,GAAG;AACVH,MAAAA,KAAK,EAAEA;AADG,KAAf;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,MAAAA;AAAD,KAAZ;AACAnB,IAAAA,KAAK,CAACsB,GAAN,CAAU,6BAAV,EAAyC;AAACH,MAAAA;AAAD,KAAzC,EACCI,IADD,CACOC,QAAQ,IAAG;AACd,WAAKC,QAAL,CAAc;AACVX,QAAAA,IAAI,EAAEU,QAAQ,CAACE;AADL,OAAd;AAGAN,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWU,IAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWU,IAAX,CAAgBa,EAA5B;AACA,YAAMC,MAAM,GAAG,KAAKxB,KAAL,CAAWU,IAAX,CAAgBa,EAA/B;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AACA,YAAMC,SAAS,GAAG;AACdD,QAAAA,MAAM,EAAEA;AADM,OAAlB;AAIAR,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACQ,QAAAA;AAAD,OAAZ;AACA7B,MAAAA,KAAK,CAACsB,GAAN,CAAW,0CAAyCM,MAAO,EAA3D,EACCL,IADD,CACMC,QAAQ,IAAI;AACd,aAAKC,QAAL,CAAc;AACVpB,UAAAA,KAAK,EAAEmB,QAAQ,CAACE;AADN,SAAd;AAGA,aAAKI,QAAL,GAJc,CAKd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACH,OA7DD;AA+DH,KA7ED;AA+EH;;AAED,QAAMA,QAAN,GAAgB;AACZ,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAK3B,KAAL,CAAWC,KAAX,CAAiB2B,MAApC,EAA4CD,CAAC,EAA7C,EAAgD;AAC5C,WAAK3B,KAAL,CAAWE,QAAX,CAAoB,MAApB,IAA8B,KAAKF,KAAL,CAAWC,KAAX,CAAiB0B,CAAjB,EAAoBxB,IAAlD;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,QAAvB;AACA,UAAI2B,IAAI,GAAG,MAAMhC,KAAK,CAAE,GAAE,KAAKG,KAAL,CAAWC,KAAX,CAAiB0B,CAAjB,EAAoBxB,IAAK,EAA7B,CAAtB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ,EAJ4C,CAK5C;;AACAjC,MAAAA,KAAK,CAACsB,GAAN,CAAW,6FAA4FW,IAAI,CAAChC,KAAM,EAAlH,EACCsB,IADD,CACOC,QAAQ,IAAI;AACf,cAAMZ,SAAS,GAAGY,QAAQ,CAACE,IAAT,CAAcO,IAAI,CAAChC,KAAnB,EAA0ByB,IAA5C,CADe,CAEf;;AACA,aAAKD,QAAL,CAAc;AACVb,UAAAA,SAAS,EAAEA;AADD,SAAd;AAGAZ,QAAAA,KAAK,CAACsB,GAAN,CAAW,sGAAqG,KAAKlB,KAAL,CAAWC,KAAX,CAAiB0B,CAAjB,EAAoBxB,IAAK,EAAzI,EACCgB,IADD,CACMC,QAAQ,IAAG;AACb,eAAI,IAAIU,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,QAAQ,CAACE,IAAT,CAAcS,QAAd,CAAuBH,MAA1C,EAAkDE,CAAC,EAAnD,EAAsD;AAClD,gBAAGV,QAAQ,CAACE,IAAT,CAAcS,QAAd,CAAuBD,CAAvB,EAA0BE,KAA1B,IAAmC,KAAKhC,KAAL,CAAWC,KAAX,CAAiB0B,CAAjB,EAAoBxB,IAA1D,EAA+D;AAC3D,oBAAMM,OAAO,GAAGW,QAAQ,CAACE,IAAT,CAAcS,QAAd,CAAuBD,CAAvB,CAAhB,CAD2D,CAE3D;;AAEA,mBAAKT,QAAL,CAAc;AACVZ,gBAAAA,OAAO,EAAEA;AADC,eAAd;AAGH;AACJ;;AACDO,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWS,OAAvB;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWQ,SAAvB;;AACA,cAAG,KAAKR,KAAL,CAAWQ,SAAX,CAAqByB,cAArB,CAAoCC,KAApC,GAA0C,GAA1C,IAAiD,KAAKlC,KAAL,CAAWS,OAAX,CAAmB0B,KAAnB,CAAyBC,WAA7E,EAAyF;AACrF,kBAAMC,SAAS,qBAAO,KAAKrC,KAAL,CAAWE,QAAlB,CAAf;;AACAmC,YAAAA,SAAS,CAAC,WAAD,CAAT,GAAyB,KAAKrC,KAAL,CAAWQ,SAAX,CAAqByB,cAArB,CAAoCC,KAApC,GAA0C,GAAnE;AACAG,YAAAA,SAAS,CAAC,QAAD,CAAT,GAAsB,OAAtB;AACAA,YAAAA,SAAS,CAAC,MAAD,CAAT,GAAqB,sCAAqC,KAAKrC,KAAL,CAAWQ,SAAX,CAAqB8B,WAAY,EAA3F;AACA,iBAAKjB,QAAL,CAAc;AACVnB,cAAAA,QAAQ,EAAEmC;AADA,aAAd;AAGArB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,QAAvB,EAAiC,iCAAjC;AACH,WATD,MAUI;AACA,kBAAMmC,SAAS,qBAAO,KAAKrC,KAAL,CAAWE,QAAlB,CAAf;;AACAmC,YAAAA,SAAS,CAAC,WAAD,CAAT,GAAyB,KAAKrC,KAAL,CAAWS,OAAX,CAAmB0B,KAAnB,CAAyBC,WAAlD;AACAC,YAAAA,SAAS,CAAC,QAAD,CAAT,GAAsB,KAAtB;AACAA,YAAAA,SAAS,CAAC,MAAD,CAAT,GAAqB,sBAAqB,KAAKrC,KAAL,CAAWS,OAAX,CAAmB8B,GAAI,EAAjE;AACA,iBAAKlB,QAAL,CAAc;AACVnB,cAAAA,QAAQ,EAAEmC;AADA,aAAd;AAGArB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,QAAvB,EAAiC,mCAAjC;AACH;;AACD,eAAKF,KAAL,CAAWO,QAAX,CAAoBiC,IAApB,CAAyB,KAAKxC,KAAL,CAAWE,QAApC;AACAc,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWO,QAAX,CAAoB,CAApB,EAAuBJ,IAAnC;AACH,SApCD;AAsCH,OA7CD;AA+CH;AACJ;;AACDsC,EAAAA,MAAM,GAAG;AACLzB,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACA,WAEI,KAAKP,KAAL,CAAWO,QAAX,CAAoBmC,GAApB,CAAyB,CAACnC,QAAD,EAAWoC,KAAX,KAAqB;AAC1C3B,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACoC,KAAD,CAAR,CAAgBxC,IAA5B;AACA,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKI,QAAQ,CAACoC,KAAD,CAAR,CAAgBxC,IAArB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKI,QAAQ,CAACoC,KAAD,CAAR,CAAgBtC,MAArB,CAFJ,EAGKE,QAAQ,CAACoC,KAAD,CAAR,CAAgBvC,SAHrB,EAII;AAAG,QAAA,IAAI,EAAEG,QAAQ,CAACoC,KAAD,CAAR,CAAgBrC,IAAzB;AAA+B,QAAA,MAAM,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDC,QAAQ,CAACL,QAAT,CAAkBC,IAAlE,CAJJ,CADJ;AAQH,KAVD,CAFJ;AAgBH;;AAlLgC;;AAqLrC,eAAeJ,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nconst appid = require(\"appid\");\r\nclass WishlistCard extends Component {\r\n    state = {\r\n        games: [],\r\n        gameInfo: {\r\n            name: \"\",\r\n            bestPrice: \"\",\r\n            seller: \"\",\r\n            page: \"\"\r\n        },\r\n        gameComp:[],\r\n        steamGame: [],\r\n        gogGame: [],\r\n        user: []\r\n\r\n    }\r\n\r\n    async componentWillMount(){\r\n        const email = localStorage.getItem(\"loggedInUser\");\r\n        const params = {\r\n             email: email\r\n        }\r\n        console.log(email);\r\n        console.log({params});\r\n        Axios.get(\"http://localhost:8080/getID\", {params})\r\n        .then( response =>{\r\n            this.setState({\r\n                user: response.data\r\n            })\r\n            console.log(this.state.user);\r\n            console.log(this.state.user.id);\r\n            const userID = this.state.user.id;\r\n            console.log(userID);\r\n            const userIDObj = {\r\n                userID: userID\r\n            }\r\n            \r\n            console.log({userIDObj});\r\n            Axios.get(`http://localhost:8080/userGames?userID=${userID}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    games: response.data\r\n                })\r\n                this.getApiID();\r\n                // for(let i = 0; i < this.state.games.length; i++){\r\n                //     this.state.gameInfo[\"name\"] = this.state.games[i].name;\r\n                //     console.log(this.state.gameInfo);\r\n                //     // let dota = await appid(`${this.state.games[i].name}`);\r\n                //     console.log(dota);\r\n                //     //\r\n                //     Axios.get(`https://cors-anywhere.herokuapp.com/https://store.steampowered.com/api/appdetails/?appids=${dota.appid}`)\r\n                //     .then( response => {\r\n                //         const steamGame = response.data[dota.appid].data\r\n                //         // steamGame.price_overview.final/100\r\n                //         this.setState({\r\n                //             steamGame: steamGame\r\n                //         })\r\n                //         Axios.get(`https://cors-anywhere.herokuapp.com/http://embed.gog.com/games/ajax/filtered?mediaType=game&search=${this.state.games[i].name}`)\r\n                //         .then(response =>{\r\n                //             for(let j = 0; j < response.data.products.length; j++){\r\n                //                 if(response.data.products[j].title == this.state.games[i].name){\r\n                //                     const gogGame = response.data.products[j]\r\n                //                     //.price.finalAmount\r\n                                    \r\n                //                     this.setState({\r\n                //                         gogGame: gogGame\r\n                //                     })\r\n                //                 }\r\n                //             }\r\n                //             console.log(this.state.gogGame);\r\n                //             console.log(this.state.steamGame);\r\n                //             if(this.state.steamGame.price_overview.final/100 >= this.state.gogP.price.finalAmount){\r\n                //                 const tempState = {...this.state.gameInfo}\r\n                //                 tempState[\"bestPrice\"] = this.state.steamGame.price_overview.final/100;\r\n                //                 tempState[\"Seller\"] = \"Steam\";\r\n                //                 tempState[\"page\"] = `https://store.steampowered.com/app/${this.state.steamGame.steam_appid}`\r\n                //                 this.setState({\r\n                //                     gameInfo: tempState\r\n                //                 })\r\n                //                 console.log(this.state.gameInfo, \"End of if price check statement\");\r\n                //             }\r\n                //             else{\r\n                //                 const tempState = {...this.state.gameInfo}\r\n                //                 tempState[\"bestPrice\"] = this.state.gogGame.price.finalAmount;\r\n                //                 tempState[\"Seller\"] = \"Gog\";\r\n                //                 tempState[\"page\"] = `https://www.gog.com${this.state.gogGame.url}`\r\n                //                 this.setState({\r\n                //                     gameInfo: tempState\r\n                //                 })\r\n                //                 console.log(this.state.gameInfo, \"End of else price check statement\");\r\n                //             }\r\n                //             this.state.gameComp.push(this.state.gameInfo);\r\n                //             console.log(this.state.gameComp);\r\n                //         })\r\n                        \r\n                //     })\r\n                    \r\n                // }\r\n                //console.log(this.state.gameComp);\r\n            })\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    async getApiID(){\r\n        for(let i = 0; i < this.state.games.length; i++){\r\n            this.state.gameInfo[\"name\"] = this.state.games[i].name;\r\n            console.log(this.state.gameInfo);\r\n            let dota = await appid(`${this.state.games[i].name}`);\r\n            console.log(dota);\r\n            //\r\n            Axios.get(`https://cors-anywhere.herokuapp.com/https://store.steampowered.com/api/appdetails/?appids=${dota.appid}`)\r\n            .then( response => {\r\n                const steamGame = response.data[dota.appid].data\r\n                // steamGame.price_overview.final/100\r\n                this.setState({\r\n                    steamGame: steamGame\r\n                })\r\n                Axios.get(`https://cors-anywhere.herokuapp.com/http://embed.gog.com/games/ajax/filtered?mediaType=game&search=${this.state.games[i].name}`)\r\n                .then(response =>{\r\n                    for(let j = 0; j < response.data.products.length; j++){\r\n                        if(response.data.products[j].title == this.state.games[i].name){\r\n                            const gogGame = response.data.products[j]\r\n                            //.price.finalAmount\r\n                            \r\n                            this.setState({\r\n                                gogGame: gogGame\r\n                            })\r\n                        }\r\n                    }\r\n                    console.log(this.state.gogGame);\r\n                    console.log(this.state.steamGame);\r\n                    if(this.state.steamGame.price_overview.final/100 >= this.state.gogGame.price.finalAmount){\r\n                        const tempState = {...this.state.gameInfo}\r\n                        tempState[\"bestPrice\"] = this.state.steamGame.price_overview.final/100;\r\n                        tempState[\"seller\"] = \"Steam\";\r\n                        tempState[\"page\"] = `https://store.steampowered.com/app/${this.state.steamGame.steam_appid}`\r\n                        this.setState({\r\n                            gameInfo: tempState\r\n                        })\r\n                        console.log(this.state.gameInfo, \"End of if price check statement\");\r\n                    }\r\n                    else{\r\n                        const tempState = {...this.state.gameInfo}\r\n                        tempState[\"bestPrice\"] = this.state.gogGame.price.finalAmount;\r\n                        tempState[\"seller\"] = \"Gog\";\r\n                        tempState[\"page\"] = `https://www.gog.com${this.state.gogGame.url}`\r\n                        this.setState({\r\n                            gameInfo: tempState\r\n                        })\r\n                        console.log(this.state.gameInfo, \"End of else price check statement\");\r\n                    }\r\n                    this.state.gameComp.push(this.state.gameInfo);\r\n                    console.log(this.state.gameComp[0].name);\r\n                })\r\n                \r\n            })\r\n            \r\n        }\r\n    }\r\n    render() {\r\n        console.log(gameComp);\r\n        return (\r\n            \r\n            this.state.gameComp.map ((gameComp, index) => {\r\n                console.log(gameComp[index].name);\r\n                return(\r\n                    <div className=\"Card\">\r\n                        <h3>{gameComp[index].name}</h3>\r\n                        <h5>{gameComp[index].seller}</h5>\r\n                        {gameComp[index].bestPrice}\r\n                        <a href={gameComp[index].page} target=\"_blank\">{gameComp.gameInfo.name}</a>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default WishlistCard;"]},"metadata":{},"sourceType":"module"}